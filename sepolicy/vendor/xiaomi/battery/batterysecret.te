type batterysecret, domain;
type batterysecret_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(batterysecret)

# {
#   Allow batterysecret to read files in
#   cgroup/mnt_vendor_file/sysfs_batteryinfo/sysfs_type/
#   vendor_sysfs_usb_supply/vendor_sysfs_usbpd_device/
#   directories
# }
r_dir_file(batterysecret, cgroup)
r_dir_file(batterysecret, mnt_vendor_file)
r_dir_file(batterysecret, vendor_sysfs_battery_supply)
r_dir_file(batterysecret, sysfs_batteryinfo)
r_dir_file(batterysecret, sysfs_type)
r_dir_file(batterysecret, vendor_sysfs_usb_supply)
r_dir_file(batterysecret, vendor_sysfs_usbpd_device)

# {
#   Allow battery secret to write to
#   persist_subsys_file/sysfs/sysfs_usb/vendor_sysfs_battery_supply/
#   vendor_sysfs_usb_supply/vendor_sysfs_usbpd_device
# }
allow batterysecret {
  persist_subsys_file
  sysfs
  sysfs_usb
  vendor_sysfs_battery_supply
  vendor_sysfs_usb_supply
  vendor_sysfs_usbpd_device
}:file w_file_perms;

allow batterysecret self:global_capability_class_set {
  sys_tty_config
  sys_boot
};

allow batterysecret self:capability {
  chown
  fsetid
};

allow batterysecret {
  system_suspend_hwservice
  hidl_manager_hwservice
}:hwservice_manager find;

# Allow batterysecret to read and write to /dev/kmsg
allow batterysecret kmsg_device:chr_file rw_file_perms;

# Allow battery secret to create_socket_perms_no_ioctl
allow batterysecret self:netlink_kobject_uevent_socket create_socket_perms_no_ioctl;

# Allow batterysecret hal to call system_suspend_server
binder_call(batterysecret, system_suspend_server)

# Allow batterysecret to manage wakelocks
wakelock_use(batterysecret)
